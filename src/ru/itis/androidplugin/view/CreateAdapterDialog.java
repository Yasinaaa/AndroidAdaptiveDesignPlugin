package ru.itis.androidplugin.view;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import ru.itis.androidplugin.elements.MaterialItem;
import ru.itis.androidplugin.elements.MaterialRecyclerView;
import ru.itis.androidplugin.generation.LayoutGenerator;
import ru.itis.androidplugin.settings.GenerateClass;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

public class CreateAdapterDialog extends JDialog {
    private JPanel contentPane;
    private JTextField newItemJTextField;
    private JButton createLayoutButton;
    private JLabel itemTitleJLabel;
    private MainView mainView;
    private String name;

    public CreateAdapterDialog(MainView mainView, String name) {
        this.mainView = mainView;
        this.name = name;

        setContentPane(contentPane);
        setModal(true);
        //getRootPane().setDefaultButton(buttonOK);

        createLayoutButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                LayoutGenerator layoutGenerator = new LayoutGenerator();
                layoutGenerator.insertNewLayout(newItemJTextField.getText());
                dispose();
                setViewItemRecyclerView();
            }
        });

        // call onCancel() when cross is clicked
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                dispose();
            }
        });

        // call onCancel() on ESCAPE
        contentPane.registerKeyboardAction(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                dispose();
            }
        }, KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
    }

    public void setViewItemRecyclerView() {
        mainView.titleParentViewJLabel.setVisible(true);
        mainView.itemParentViewJLabel.setVisible(true);
        mainView.createAdapterButton.setVisible(true);
        mainView.titleMaterialItemJLabel.setVisible(false);
        mainView.itemMaterialItemJTextField.setVisible(false);
        mainView.createButton.setVisible(false);

        mainView.itemParentViewJLabel.setText(name);

        mainView.createAdapterButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                GenerateClass generateClass = new GenerateClass();
                generateClass.generateClass(mainView.itemMaterialItemJTextField.getText());
            }
        });

    }
    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new GridLayoutManager(3, 1, new Insets(10, 10, 10, 10), -1, -1));
        itemTitleJLabel = new JLabel();
        itemTitleJLabel.setText("Recycler View Item layout");
        contentPane.add(itemTitleJLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        newItemJTextField = new JTextField();
        contentPane.add(newItemJTextField, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        createLayoutButton = new JButton();
        createLayoutButton.setText("Create layout");
        contentPane.add(createLayoutButton, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }
}
